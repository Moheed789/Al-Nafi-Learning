Lecture 25 : SED Commands in Bash Script

This lecture covers the usage of sed, a stream editor tool in Bash scripting, used for parsing and transforming text. sed is primarily used to display content, find specific 
text patterns, replace content, and perform inline file modifications efficiently.

SED Works

sed is used for:

1. Displaying specific contents from a file
2. Finding keywords or patterns
3. Replacing text
4. Modifying contents directly

SED Syntax

You can use sed in the following ways:
1. Using a filename directly:
    sed [options] filename

2. Using it with a command output through a pipe:
    command | sed [options]

Display All Lines

This displays the entire content of myuser.txt.
Example:
    sed ' ' myuser.txt
    # OR
    cat myuser.txt | sed ' '

Print Specific Line

This command prints only the 4th line of the file.
Example:
    cat myuser.txt | sed -n '4p'

Print Line Range (1–5)

This prints lines from 1 to 5 using line numbers.
Example:
    cat -n myuser.txt | sed -n '1,5p'


Print Line Range (5–End)

This prints from line 5 to the end of the file.
Example:
    cat -n myuser.txt | sed -n '5,$p'

Print Custom Range (3–15)

This prints lines from 3 to 15.
Example:
    cat -n myuser.txt | sed -n '3,15p'
    # OR using awk
    cat -n myuser.txt | awk 'NR>=3 && NR<=15 {print $0}'

Print from Pattern to End

This command prints all lines starting from the line that contains "aadmin" to the end.
Example:
    cat -n myuser.txt | sed -n '/aadmin/,$p'

Search for a Specific Word

This searches for the word "alnafi" and prints matching lines.
Example:
    cat -n myuser.txt | sed -n '/alnafi/p'
Output:
    alnafi:x:1006:1008::/home/alnafi:/bin/bash

Using Variables with SED

Define a variable and echo it.
Example:
    abd=abdeali
    echo $abd
Output: 
    abdeali

Use Variable to Search with SED

Use the variable value to find matching lines.
Example1:
    cat myuser.txt | sed -n '/abdeali/p'
Output1:
    abdeali:x:1000:1000:Abdeali,,,:/home/abdeali:/bin/bash

Example2:
    cat myuser.txt | sed -n '/$abd/p'
    cat myuser.txt | sed -n "/$abd/p"
Output2:
    abdeali:x:1000:1000:Abdeali,,,:/home/abdeali:/bin/bash

Delete a Range of Lines

This deletes lines 1 to 10 in-place from the file.
Example:
    sed -i '1,10d' myuser.txt

Delete Matching Pattern

This deletes all lines containing "alnafi".
Example:
    sed -i '/alnafi/d' myuser.txt

Backup and Delete

Creates a .bck backup and deletes lines containing "alnafi".
Example:
    sed -i.bck '/alnafi/d' myuser.txt

Keep Only Matching Pattern

Deletes everything except lines with "alnafi".
Example:
    sed -i.bck '/alnafi/!d' myuser1.txt

Replace Text (Basic Syntax)

Replaces "old" with "new".
Example:
    filename | sed 's/old/new/'

Replace Specific Words

Replaces "alnafi" with "Alnafi".
Example:
    cat myuser.txt | sed 's/alnafi/Alnafi/'
    sed -i 's/alnafi/Alnafi/' myuser.txt

Replace All Occurrences Globally

This replaces all instances of "abdeali" with "ABDEALI".
Example:
    cat myuser.txt | sed 's/abdeali/ABDEALI/g'

Replace Second Occurrence Only

Replaces the second occurrence of "testuser" with "Ttestuser".
Example:
    cat myuser.txt | sed 's/testuser/Ttestuser/2'

Insert Line at Beginning

This inserts a header line before line 1 of a CSV file.
Example:
    sed -i '1i Sr.no,IP,Hostname' data.csv

View Modified CSV

Check inserted line at top.
Example:
    cat data.csv
Output:
    Sr.no,IP,Hostname
    1,192.168.1.2,serve1
    2,192.168.1.3,serve2

Append Line After Specific Line

Adds a new line after line 4.
Example:
    sed -i '4a 4,192.168.1.5,serv5' data.csv

Check CSV After Append

Example:
    cat data.csv
Output:
    Sr.no,IP,Hostname
    1,192.168.1.2,serve1
    3,192.168.1.4,serv3
    2,192.168.1.3,serve2
    4,192.168.1.5,serv5

Delete Line Containing Specific IP

Deletes the line containing 192.168.1.4.
Example:
    sed -i '/192.168.1.4/d' data.csv

Delete Last Line

Removes the last line from the file.
Example:
    sed -i '$d' data.csv

Search for Specific Text

Search for serve1 in the file.
Example:
    cat data.csv | sed -n '/serve1/p'

Search with Brackets (Character Classes)

Matches serve1 or serve2.
Example:
    cat data.csv | sed -n '/serve[1,2]/p'

Wildcard Search (Zero or More)

Searches for all lines containing serve.
Example:
    cat data.csv | sed -n '/serve*/p'

Wildcard Single Character

Searches for serve followed by any one character.
Example:
    cat data.csv | sed -n '/serve?/p'
    cat data.csv | sed -n '/serve./p'

Line Ends With Match

Finds lines that end with serve1.
Example:
    cat data.csv | sed -n '/serve1$/p'

Search for Lines Containing 1

Example:
    cat data.csv | sed -n '/1/p'

Search Lines Starting With 1

Example:
    cat data.csv | sed -n '/^1/p'

Delete Comments from File

Removes all lines starting with # from sshd_config.
Example:
    sed -i '/^#/d' sshd_config

Special Character in Regex

\s is used to denote space and \: is for matching colon.
Example:
    # Example to match specific date/time format
    cat /var/log/auth.log | sed -n '/Jul\s16\s19\:09/p' > abdeali.txt

Check Filtered Log

Displays the filtered content.
Example:
    cat abdeali.txt